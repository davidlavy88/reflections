How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    Because I can see the differences as well as common words, and I spotted the wrong one.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    I can see all the changes and manage specific versions of the project.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Pro is to have a controlled version of my changes, and con is idk.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Because Git mostly uses it for codes, and there are many files in coding, where is GDocs is different.

How can you use the commands git log and git diff to view the history of files?

    Git log gives me hints about what changed, then using the IDs into git diff I can see what actually changed.

How might using version control make you more confident to make changes that
could break something?

    Because I can always get back to a previous state(s) and start over from there.

Now that you have your workspace set up, what do you want to try using Git for?

    For programming.
